<%- include('partials/head') %>
<style>
  /* Container styles */
  .container {
    height: 100vh;
    width: 100vw;
    max-width: 100%;
    padding: 0;
    display: flex;
    flex-direction: column;
    background: #1a1a1a;
  }

  /* Room info header */
  .room-header {
    background: rgba(31, 41, 55, 0.95);
    padding: 0.75rem 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid rgba(75, 85, 99, 0.4);
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 10;
  }

  /* Network status indicator */
  .network-status {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-left: 1rem;
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    background: rgba(0, 0, 0, 0.2);
    font-size: 0.875rem;
  }

  .signal-bars {
    display: flex;
    gap: 1px;
    height: 1rem;
  }

  .signal-bar {
    width: 4px;
    border-radius: 1px;
    background-color: rgba(255, 255, 255, 0.3);
  }

  .signal-bar.active {
    background-color: #60A5FA;
  }

  .signal-excellent .signal-bar.active {
    background-color: #10B981; /* Green */
  }

  .signal-good .signal-bar.active {
    background-color: #60A5FA; /* Blue */
  }

  .signal-fair .signal-bar.active {
    background-color: #F59E0B; /* Yellow/Orange */
  }

  .signal-poor .signal-bar.active {
    background-color: #EF4444; /* Red */
  }

  .signal-status-text {
    white-space: nowrap;
  }

  /* Video grid container */
  #video-grid {
    flex: 1;
    display: grid;
    gap: 1rem;
    padding: 1rem;
    margin-top: 4rem; /* Space for fixed header */
    margin-bottom: 5rem; /* Space for controls */
    overflow: auto;
    align-items: center;
    justify-items: center;
  }

  /* Responsive grid layout */
  #video-grid.single-video {
    grid-template-columns: 1fr;
    place-items: center;
    padding: 0;
    margin: 4rem 0 5rem 0;
  }

  #video-grid.multi-video {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  }

  /* Video container styles */
  .video-container {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 12px;
    overflow: hidden;
    background: #000;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .single-video .video-container {
    width: 100%;
    max-width: 1000px;
    aspect-ratio: 16/9;
  }

  .multi-video .video-container {
    width: 100%;
    aspect-ratio: 16/9;
  }

  /* Video element styles */
  video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transform: scaleX(-1); /* Mirror effect */
  }

  /* Don't mirror screen shares */
  .screen-share video {
    transform: scaleX(1);
    object-fit: contain; /* Ensure screen fits horizontally */
  }

  /* Video container with screen share */
  .video-container.screen-share {
    aspect-ratio: 16/9;
    width: 100%;
    max-width: 1200px;
  }

  /* Name tag styles */
  .name-tag {
    position: absolute;
    bottom: 1rem;
    left: 1rem;
    background: rgba(0, 0, 0, 0.6);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    backdrop-filter: blur(4px);
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  /* Mic status indicator */
  .mic-status {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    margin-left: 0.5rem;
  }

  .mic-status.unmuted {
    background-color: #10B981; /* Green color for unmuted */
    box-shadow: 0 0 8px rgba(16, 185, 129, 0.6);
  }

  .mic-status.muted {
    background-color: #EF4444; /* Red color for muted */
    box-shadow: 0 0 8px rgba(239, 68, 68, 0.6);
  }

  .mic-icon {
    font-size: 0.875rem;
    margin-left: 0.25rem;
  }

  /* Controls container */
  .controls-container {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    gap: 1rem;
    padding: 1rem;
    background: rgba(31, 41, 55, 0.95);
    backdrop-filter: blur(8px);
    border-top: 1px solid rgba(75, 85, 99, 0.4);
    z-index: 10;
  }

  /* Control buttons */
  .control-btn {
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    cursor: pointer;
    border: none;
    outline: none;
  }

  .control-btn:hover {
    transform: scale(1.1);
  }

  .control-btn:active {
    transform: scale(0.95);
  }

  .control-btn i {
    font-size: 1.25rem;
  }

  /* Screen sharing styles */
  .screen-share-active {
    background-color: #10B981 !important;
  }

  /* Hide camera switch button on desktop */
  #camera-switch-btn {
    display: none;
  }

  /* Show camera switch button only on mobile devices */
  @media (max-width: 640px) {
    #camera-switch-btn {
      display: flex;
    }
  }

  /* Copy link button */
  #copy-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    transition: all 0.2s ease;
    background: rgba(59, 130, 246, 0.1);
    border: 1px solid rgba(59, 130, 246, 0.2);
    color: #60A5FA;
  }

  #copy-link:hover {
    background: rgba(59, 130, 246, 0.2);
  }

  /* Loading and error states */
  #loading-overlay {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 50;
  }

  .loading-spinner {
    width: 3rem;
    height: 3rem;
    border: 4px solid rgba(255, 255, 255, 0.1);
    border-left-color: #60A5FA;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  #error-container {
    position: fixed;
    top: 5rem;
    right: 1rem;
    z-index: 40;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    max-width: 24rem;
  }

  .error-message {
    background: #EF4444;
    color: white;
    padding: 0.75rem 1rem;
    border-radius: 8px;
    font-size: 0.875rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    animation: slideIn 0.3s ease;
  }

  /* Animations */
  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  /* Media queries for responsive design */
  @media (max-width: 640px) {
    .room-header {
      padding: 0.5rem 1rem;
      flex-direction: column;
      gap: 0.5rem;
      align-items: flex-start;
    }

    #video-grid {
      margin-top: 5.5rem;
      padding: 0.5rem;
      gap: 0.5rem;
    }

    .controls-container {
      padding: 0.75rem;
    }

    .control-btn {
      width: 3rem;
      height: 3rem;
    }

    .name-tag {
      bottom: 0.5rem;
      left: 0.5rem;
      padding: 0.25rem 0.75rem;
      font-size: 0.75rem;
    }
  }

  /* Dark mode enhancements */
  @media (prefers-color-scheme: dark) {
    body {
      background: #1a1a1a;
    }
  }
</style>

<body class="bg-gray-900">
  <!-- Loading Overlay -->
  <div id="loading-overlay">
    <div class="loading-spinner"></div>
  </div>

  <!-- Error Container -->
  <div id="error-container"></div>

  <div class="container">
    <!-- Room Info Header -->
    <div class="room-header">
      <div class="flex items-center">
        <div>
          <h2 class="text-xl font-bold text-white">Room: <span class="text-blue-400"><%= roomId %></span></h2>
          <p class="text-sm text-gray-400">Share this code with others to join</p>
        </div>
        <div class="network-status" id="networkStatus">
          <div class="signal-bars">
            <div class="signal-bar"></div>
            <div class="signal-bar"></div>
            <div class="signal-bar"></div>
            <div class="signal-bar"></div>
          </div>
          <span class="signal-status-text">Connecting...</span>
        </div>
      </div>
      <button id="copy-link">
        <i class="fas fa-copy"></i>
        <span>Copy Link</span>
      </button>
    </div>
    
    <!-- Video Grid -->
    <div id="video-grid" class="single-video"></div>
    
    <!-- Controls -->
    <div class="controls-container">
      <button class="control-btn bg-blue-500 hover:bg-blue-600" title="Toggle Video">
        <i class="fas fa-video text-white"></i>
      </button>
      <button class="control-btn bg-blue-500 hover:bg-blue-600" title="Toggle Audio">
        <i class="fas fa-microphone text-white"></i>
      </button>
      <button id="camera-switch-btn" class="control-btn bg-blue-500 hover:bg-blue-600" title="Switch Camera">
        <i class="fas fa-sync text-white"></i>
      </button>
      <button id="screen-share-btn" class="control-btn bg-blue-500 hover:bg-blue-600" title="Share Screen">
        <i class="fas fa-desktop text-white"></i>
      </button>
      <button class="control-btn bg-red-500 hover:bg-red-600" title="Leave Meeting">
        <i class="fas fa-phone-slash text-white"></i>
      </button>
    </div>
  </div>

  <!-- Scripts -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const ROOM_ID = '<%= roomId %>';
    
    // Copy room link functionality
    document.getElementById('copy-link').addEventListener('click', () => {
      const url = window.location.href;
      navigator.clipboard.writeText(url).then(() => {
        alert('Room link copied to clipboard!');
      });
    });

    // Update grid class based on participant count
    function updateGridClass() {
      const videoGrid = document.getElementById('video-grid');
      const participantCount = videoGrid.children.length;
      videoGrid.className = participantCount === 1 ? 'single-video' : 'multi-video';
    }

    // Observe video grid for changes
    const observer = new MutationObserver(updateGridClass);
    observer.observe(document.getElementById('video-grid'), { 
      childList: true 
    });
  </script>
  <script src="/js/room.js"></script>
</body>
</html>